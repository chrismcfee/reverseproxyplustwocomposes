version: '3.3'

services:
    reverse-proxy:
        restart: always
        logging:
            options:
                max-size: "100m"
                max-file: "3"
        networks:
            - znet
        image: traefik:2.9.4
        ports:
            - 80:80
            - 443:443
            - 8080:8080
            - 9002:9002
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - /srv/traefik:/configuration
            - /srv/zignage/ssl:/etc/ssl

        command:
            - --log.level=DEBUG
            - --api.insecure=true
            - --api.dashboard=true
            - --api.debug=true
            - --entrypoints.web.address=:80
            - --entrypoints.websecure.address=:443
            - --entrypoints.other.address=:9002
            - --entrypoints.web.http.redirections.entryPoint.to=websecure
            - --entrypoints.web.http.redirections.entryPoint.scheme=https
            - --entrypoints.web.http.redirections.entryPoint.permanent=true
            - --entrypoints.web.forwardedHeaders.insecure
            - --entryPoints.websecure.forwardedHeaders.insecure
            - --entryPoints.other.forwardedHeaders.insecure
            - --providers.docker=true
            - --providers.file.directory=/configuration/
            - --providers.file.watch=true
            - --serverstransport.insecureskipverify=true
            - --metrics.prometheus.addEntryPointsLabels=true
            - --metrics.prometheus.addServicesLabels=true
            - --metrics.prometheus=true
        labels:
            - "traefik.enabled=true"
            - "traefik.http.services.meshcentral.loadbalancer.server.port=80"
            - "traefik.http.routers.meshcentral.entrypoints=web,websecure"
            - "traefik.http.routers.meshcentral.rule(HostRegexp(`{catchall:.*}`) && PathPrefix(`/mesh`))"
            - "traefik.http.routers.meshcentral.tls=true"
            - "traefik.http.routers.ping.entrypoints=web,websecure"
            - "traefik.http.routers.ping.rule=(HostRegexp(`{catchall:.*}`) && PathPrefix(`/ping`))"
            - "traefik.http.routers.ping.tls=true"

    mongodb:
        container_name: meshcentral_db
        image: mongo:4.4.6
        tty: true
        restart: always
        networks:
            - znet
        expose:
            - 27017
        volumes:
            - '/opt/meshcentral/database:/data/db'
    nginx:
        container_name: nginx
        image: nginx:latest
        tty: true
        networks:
            - znet
        restart: always

    labels:
        - traefik.enable=true
        - traefik.port=80
        - traefik.http.routers.nginx.rule=Host(`localhost`)
        - traefik.http.routers.nginx.entrypoints=websecure
        - traefik.http.routers.nginx.tls=true
        - traefik.http.routers.nginx.tls.certresolver=myresolver

    meshcentral:
        restart: always
        container_name: meshcentral
        networks:
            - znet
        depends_on:
            - 'mongodb'
        image: typhonragewind/meshcentral:mongodb-latest
        environment:
            - HOSTNAME=38.96.173.174     #your hostname
            - REVERSE_PROXY=true     #set to your reverse proxy IP if you want to put meshcentral behind a reverse proxy
            - REVERSE_PROXY_TLS_PORT=443
            - IFRAME=false #set to true if you wish to enable iframe support
            - ALLOW_NEW_ACCOUNTS=true    #set to false if you want disable self-service creation of new accounts besides the first (admin)
            - WEBRTC=true  #set to true to enable WebRTC - per documentation it is not officially released with meshcentral, but is solid enough to work with. Use with caution
            - NODE_ENV=production
        volumes:
            - ./meshcentral/data:/opt/meshcentral/meshcentral-data
            - ./meshcentral/user_files:/opt/meshcentral/meshcentral-files
        labels:
            #traefik.http.routers.meshcentral.rule: Host(`mesh.sobe.name/mesh/`)
            #traefik.http.services.ginx.loadbalancer.server.port: 8083
            traefik.enable: true
            traefik.http.services.meshcentral.loadbalancer.server.port: 80
            traefik.http.routers.meshcentral.entrypoints: web, websecure
            traefik.http.routers.meshcentral.rule: (HostRegexp(`{catchall:.*}') && PathPrefix('/mesh'))"
            traefik.http.routers.meshcentral.service: primary
            traefik.http.routers.meshcentral.tls: true
            traefik.http.routers.meshcentral.priority: 1


networks:
    znet:
        internal: false
        driver: bridge
